LINKEDIN_CI=779it8hk6sqd84
LINKEDIN_CS=TjkWLKmGPcGKOWgc

#POSTGRESQL_URL=jdbc:postgresql://restapishppdatabase.cujcgpjfvj4u.eu-north-1.rds.amazonaws.com:5432/postgres
#POSTGRESQL_USERNAME=postgre_shpp
#POSTGRESQL_PASSWORD=PasS#ShPp#2

POSTGRESQL_URL=jdbc:postgresql://localhost:5432/practic
POSTGRESQL_USERNAME=postgres
POSTGRESQL_PASSWORD=postgres



server.port=5000
<<<<<<< HEAD

refreshDB_on_start=false

spring.datasource.url=${POSTGRESQL_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${POSTGRESQL_USERNAME}
spring.datasource.password=${POSTGRESQL_PASSWORD}

=======
spring.datasource.url=${POSTGRESQL_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${POSTGRESQL_USERNAME}
spring.datasource.password=${POSTGRESQL_PASSWORD}
>>>>>>> refs/remotes/origin/PRAC-24
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
refreshDB_on_start=false
spring.jpa.defer-datasource-initialization=true

spring.security.oauth2.client.registration.linkedin.client-id=${LINKEDIN_CI}
spring.security.oauth2.client.registration.linkedin.client-secret=${LINKEDIN_CS}
spring.security.oauth2.client.registration.linkedin.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.linkedin.scope=r_emailaddress, r_liteprofile
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin

spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
spring.security.oauth2.client.provider.linkedin.user-name-attribute=id

spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true

# metrics-start
management.endpoints.enabled-by-default=false
management.endpoint.prometheus.enabled=true
management.endpoints.web.exposure.include=prometheus
#metrics-end
